//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.1.
// 
#pragma warning disable 1591

namespace ERP.Agendamento.Serviços.Utils.Agendamento_Services {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FornecedorServicosSoap", Namespace="http://labsoft.pcs.usp.br:3004/")]
    public partial class FornecedorServicos : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AgendamentosByMedicosOperationCompleted;
        
        private System.Threading.SendOrPostCallback PacienteByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotificarManutencaoOperationCompleted;
        
        private System.Threading.SendOrPostCallback NotificarFeriasOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FornecedorServicos() {
            this.Url = global::ERP.Agendamento.Serviços.Utils.Properties.Settings.Default.ERP_Agendamento_Serviços_Utils_br_usp_pcs_labsoft_local_FornecedorServicos;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AgendamentosByMedicosCompletedEventHandler AgendamentosByMedicosCompleted;
        
        /// <remarks/>
        public event PacienteByIdCompletedEventHandler PacienteByIdCompleted;
        
        /// <remarks/>
        public event NotificarManutencaoCompletedEventHandler NotificarManutencaoCompleted;
        
        /// <remarks/>
        public event NotificarFeriasCompletedEventHandler NotificarFeriasCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://labsoft.pcs.usp.br:3004/AgendamentosByMedicos", RequestNamespace="http://labsoft.pcs.usp.br:3004/", ResponseNamespace="http://labsoft.pcs.usp.br:3004/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Agendamento[] AgendamentosByMedicos(int id) {
            object[] results = this.Invoke("AgendamentosByMedicos", new object[] {
                        id});
            return ((Agendamento[])(results[0]));
        }
        
        /// <remarks/>
        public void AgendamentosByMedicosAsync(int id) {
            this.AgendamentosByMedicosAsync(id, null);
        }
        
        /// <remarks/>
        public void AgendamentosByMedicosAsync(int id, object userState) {
            if ((this.AgendamentosByMedicosOperationCompleted == null)) {
                this.AgendamentosByMedicosOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAgendamentosByMedicosOperationCompleted);
            }
            this.InvokeAsync("AgendamentosByMedicos", new object[] {
                        id}, this.AgendamentosByMedicosOperationCompleted, userState);
        }
        
        private void OnAgendamentosByMedicosOperationCompleted(object arg) {
            if ((this.AgendamentosByMedicosCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AgendamentosByMedicosCompleted(this, new AgendamentosByMedicosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://labsoft.pcs.usp.br:3004/PacienteById", RequestNamespace="http://labsoft.pcs.usp.br:3004/", ResponseNamespace="http://labsoft.pcs.usp.br:3004/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Paciente PacienteById(int id) {
            object[] results = this.Invoke("PacienteById", new object[] {
                        id});
            return ((Paciente)(results[0]));
        }
        
        /// <remarks/>
        public void PacienteByIdAsync(int id) {
            this.PacienteByIdAsync(id, null);
        }
        
        /// <remarks/>
        public void PacienteByIdAsync(int id, object userState) {
            if ((this.PacienteByIdOperationCompleted == null)) {
                this.PacienteByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPacienteByIdOperationCompleted);
            }
            this.InvokeAsync("PacienteById", new object[] {
                        id}, this.PacienteByIdOperationCompleted, userState);
        }
        
        private void OnPacienteByIdOperationCompleted(object arg) {
            if ((this.PacienteByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PacienteByIdCompleted(this, new PacienteByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://labsoft.pcs.usp.br:3004/NotificarManutencao", RequestNamespace="http://labsoft.pcs.usp.br:3004/", ResponseNamespace="http://labsoft.pcs.usp.br:3004/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotificarManutencao(System.DateTime dataInicio, System.DateTime dataFim, int salaId) {
            this.Invoke("NotificarManutencao", new object[] {
                        dataInicio,
                        dataFim,
                        salaId});
        }
        
        /// <remarks/>
        public void NotificarManutencaoAsync(System.DateTime dataInicio, System.DateTime dataFim, int salaId) {
            this.NotificarManutencaoAsync(dataInicio, dataFim, salaId, null);
        }
        
        /// <remarks/>
        public void NotificarManutencaoAsync(System.DateTime dataInicio, System.DateTime dataFim, int salaId, object userState) {
            if ((this.NotificarManutencaoOperationCompleted == null)) {
                this.NotificarManutencaoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotificarManutencaoOperationCompleted);
            }
            this.InvokeAsync("NotificarManutencao", new object[] {
                        dataInicio,
                        dataFim,
                        salaId}, this.NotificarManutencaoOperationCompleted, userState);
        }
        
        private void OnNotificarManutencaoOperationCompleted(object arg) {
            if ((this.NotificarManutencaoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotificarManutencaoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://labsoft.pcs.usp.br:3004/NotificarFerias", RequestNamespace="http://labsoft.pcs.usp.br:3004/", ResponseNamespace="http://labsoft.pcs.usp.br:3004/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void NotificarFerias(System.DateTime dataInicio, System.DateTime dataFim, int medicoId) {
            this.Invoke("NotificarFerias", new object[] {
                        dataInicio,
                        dataFim,
                        medicoId});
        }
        
        /// <remarks/>
        public void NotificarFeriasAsync(System.DateTime dataInicio, System.DateTime dataFim, int medicoId) {
            this.NotificarFeriasAsync(dataInicio, dataFim, medicoId, null);
        }
        
        /// <remarks/>
        public void NotificarFeriasAsync(System.DateTime dataInicio, System.DateTime dataFim, int medicoId, object userState) {
            if ((this.NotificarFeriasOperationCompleted == null)) {
                this.NotificarFeriasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNotificarFeriasOperationCompleted);
            }
            this.InvokeAsync("NotificarFerias", new object[] {
                        dataInicio,
                        dataFim,
                        medicoId}, this.NotificarFeriasOperationCompleted, userState);
        }
        
        private void OnNotificarFeriasOperationCompleted(object arg) {
            if ((this.NotificarFeriasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NotificarFeriasCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://labsoft.pcs.usp.br:3004/")]
    public partial class Agendamento {
        
        private int medico_idField;
        
        private string medico_nomeField;
        
        private int paciente_idField;
        
        private string paciente_nomeField;
        
        private System.DateTime dataAtendimentoField;
        
        /// <remarks/>
        public int medico_id {
            get {
                return this.medico_idField;
            }
            set {
                this.medico_idField = value;
            }
        }
        
        /// <remarks/>
        public string medico_nome {
            get {
                return this.medico_nomeField;
            }
            set {
                this.medico_nomeField = value;
            }
        }
        
        /// <remarks/>
        public int paciente_id {
            get {
                return this.paciente_idField;
            }
            set {
                this.paciente_idField = value;
            }
        }
        
        /// <remarks/>
        public string paciente_nome {
            get {
                return this.paciente_nomeField;
            }
            set {
                this.paciente_nomeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dataAtendimento {
            get {
                return this.dataAtendimentoField;
            }
            set {
                this.dataAtendimentoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.1")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://labsoft.pcs.usp.br:3004/")]
    public partial class Paciente {
        
        private string nomeField;
        
        private string rgField;
        
        private string cpfField;
        
        private System.DateTime data_nascimentoField;
        
        private int pesoField;
        
        private int alturaField;
        
        private string tipo_sanguineoField;
        
        private string afiliacao_paiField;
        
        private string afiliacao_maeField;
        
        private string endereco_residencialField;
        
        private string telefone_residencialField;
        
        private string endereco_comercialField;
        
        private string telefone_comercialField;
        
        private string telefone_celularField;
        
        private int convenioField;
        
        /// <remarks/>
        public string nome {
            get {
                return this.nomeField;
            }
            set {
                this.nomeField = value;
            }
        }
        
        /// <remarks/>
        public string rg {
            get {
                return this.rgField;
            }
            set {
                this.rgField = value;
            }
        }
        
        /// <remarks/>
        public string cpf {
            get {
                return this.cpfField;
            }
            set {
                this.cpfField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime data_nascimento {
            get {
                return this.data_nascimentoField;
            }
            set {
                this.data_nascimentoField = value;
            }
        }
        
        /// <remarks/>
        public int peso {
            get {
                return this.pesoField;
            }
            set {
                this.pesoField = value;
            }
        }
        
        /// <remarks/>
        public int altura {
            get {
                return this.alturaField;
            }
            set {
                this.alturaField = value;
            }
        }
        
        /// <remarks/>
        public string tipo_sanguineo {
            get {
                return this.tipo_sanguineoField;
            }
            set {
                this.tipo_sanguineoField = value;
            }
        }
        
        /// <remarks/>
        public string afiliacao_pai {
            get {
                return this.afiliacao_paiField;
            }
            set {
                this.afiliacao_paiField = value;
            }
        }
        
        /// <remarks/>
        public string afiliacao_mae {
            get {
                return this.afiliacao_maeField;
            }
            set {
                this.afiliacao_maeField = value;
            }
        }
        
        /// <remarks/>
        public string endereco_residencial {
            get {
                return this.endereco_residencialField;
            }
            set {
                this.endereco_residencialField = value;
            }
        }
        
        /// <remarks/>
        public string telefone_residencial {
            get {
                return this.telefone_residencialField;
            }
            set {
                this.telefone_residencialField = value;
            }
        }
        
        /// <remarks/>
        public string endereco_comercial {
            get {
                return this.endereco_comercialField;
            }
            set {
                this.endereco_comercialField = value;
            }
        }
        
        /// <remarks/>
        public string telefone_comercial {
            get {
                return this.telefone_comercialField;
            }
            set {
                this.telefone_comercialField = value;
            }
        }
        
        /// <remarks/>
        public string telefone_celular {
            get {
                return this.telefone_celularField;
            }
            set {
                this.telefone_celularField = value;
            }
        }
        
        /// <remarks/>
        public int convenio {
            get {
                return this.convenioField;
            }
            set {
                this.convenioField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void AgendamentosByMedicosCompletedEventHandler(object sender, AgendamentosByMedicosCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AgendamentosByMedicosCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AgendamentosByMedicosCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Agendamento[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Agendamento[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void PacienteByIdCompletedEventHandler(object sender, PacienteByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PacienteByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PacienteByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Paciente Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Paciente)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NotificarManutencaoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void NotificarFeriasCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591